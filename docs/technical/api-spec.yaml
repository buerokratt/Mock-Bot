openapi: 3.1.0
x-stoplight:
  id: nkbr4wufxtv52
info:
  title: mbot
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /client-api/chats:
    post:
      summary: Create chat
      operationId: post-chats
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
              examples: {}
      description: Start a new chat.
    parameters: []
  '/client-api/chats/{chatId}/messages':
    parameters:
      - schema:
          type: string
          format: uuid
          example: 5675d57d-f516-4c5c-9307-8de5565d924b
        name: chatId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-chats-chatId-messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
      description: ''
    post:
      summary: ''
      operationId: post-chats-chatId-messages
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
  /dmr-api/messages:
    parameters: []
    post:
      summary: ''
      operationId: post-dmr-api-messages
      responses:
        '202':
          description: Accepted
      description: Receive message from DMR.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DMRMessage'
        description: ''
components:
  schemas:
    Chat:
      title: Chat
      x-stoplight:
        id: 0wi8ep6tujz0u
      type: object
      examples: []
      properties:
        id:
          type: string
          format: uuid
          example: a51d61c3-ce60-478d-98d5-21b8b99271ae
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        createdAt:
          type: string
          format: date-time
          example: '2022-05-13T11:28:29.972Z'
          readOnly: true
      required:
        - id
        - createdAt
    Message:
      title: Message
      x-stoplight:
        id: 8rb81u2ztllz0
      type: object
      examples: []
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          example: 'Hi, I need to update my drivers licence.'
        createdAt:
          type: string
          format: date-time
          example: '2022-05-13T11:28:29.972Z'
          readOnly: true
      required:
        - id
        - content
        - createdAt
    DMRMessage:
      title: DMRMessage
      x-stoplight:
        id: ip5f1pcve4h88
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2c0401d0-f804-47fa-a278-0b9164ec0b2c
          description: 'generated by initiating participant, in DMR a unique key would consist of id, '
        from:
          type: string
          description: DMR participant unique name
          example: PoliceAndBorderGuardBot
        to:
          type: string
          description: 'DMR participant unique name. If to is null, message will be forwarded to Classifier.'
          example: ChitChatBot
        payload:
          $ref: '#/components/schemas/Payload'
      required:
        - id
        - from
        - payload
    Payload:
      title: Payload
      x-stoplight:
        id: ip5f1pcve4h88
      type: object
      properties:
        content:
          type: string
        client:
          type: string
      required:
        - content
      description: '?Encrypted? payload containing all data not used for routing DMR messages.'
  requestBodies: {}
  responses: {}
