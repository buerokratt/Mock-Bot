openapi: 3.0.3
info:
  title: Mock Bot API
  version: 0.1.0
  description: Lightweight component used to demonstrate chatbot integration with a Distributed Message Room.
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3000'
paths:
  /client-api/chats:
    post:
      summary: Create chat
      operationId: post-chats
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                title: Chat
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: a51d61c3-ce60-478d-98d5-21b8b99271ae
                    readOnly: true
                  messages:
                    type: array
                    items:
                      title: Message
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          readOnly: true
                        content:
                          type: string
                          example: 'Hi, I need to update my drivers licence.'
                        createdAt:
                          type: string
                          format: date-time
                          example: '2022-05-13T11:28:29.972Z'
                          readOnly: true
                      required:
                        - id
                        - content
                        - createdAt
                  createdAt:
                    type: string
                    format: date-time
                    example: '2022-05-13T11:28:29.972Z'
                    readOnly: true
                required:
                  - id
                  - createdAt
              examples: {}
      description: Start a new chat.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    parameters: []
  '/client-api/chats/{chatId}/messages':
    parameters:
      - schema:
          type: string
          format: uuid
          example: 5675d57d-f516-4c5c-9307-8de5565d924b
        name: chatId
        in: path
        required: true
    post:
      summary: ''
      operationId: post-chats-chatId-messages
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                title: Message
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  content:
                    type: string
                    example: 'Hi, I need to update my drivers licence.'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2022-05-13T11:28:29.972Z'
                    readOnly: true
                required:
                  - id
                  - content
                  - createdAt
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              title: Message
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  readOnly: true
                content:
                  type: string
                  example: 'Hi, I need to update my drivers licence.'
                createdAt:
                  type: string
                  format: date-time
                  example: '2022-05-13T11:28:29.972Z'
                  readOnly: true
              required:
                - id
                - content
                - createdAt
  /dmr-api/messages:
    parameters: []
    post:
      summary: ''
      operationId: post-dmr-api-messages
      description: Receive message from DMR.
      parameters:
        - name: X-Send-To
          in: header
          required: true
          schema:
            type: string
            example: Classifier
          description: Participant name to send the message to.
        - name: X-Sent-By
          in: header
          required: true
          schema:
            type: string
            example: NLib
          description: Name of the participant that sent the message.
        - name: X-Model-Type
          in: header
          required: true
          schema:
            type: string
            example: application/vnd.classifier.classification+json;version=1
          description: Payload type when decrypted.
        - name: X-Message-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
            example: bb20ba03-5e52-4a61-bcc1-0ad538f1b448
          description: 'Uuid generated by the sender of a message for correlating async responses to a specific request. '
        - name: X-Message-Id-Ref
          in: header
          schema:
            type: string
            format: uuid
            example: 545226ad-0b8d-4ccb-b83f-6b3ad8d44ec8
          description: Reference to the original X-Message-Id we are replying to.
      requestBody:
        content:
          application/vnd.classifier.classification+json;version=1:
            schema:
              title: Classification
              type: object
              properties:
                message:
                  type: string
                  example: Greetings from Estonia!
                classification:
                  type: string
                  example: NLib
              required:
                - message
                - classification
      responses:
        '202':
          description: Accepted
components:
  schemas:
    Chat:
      title: Chat
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: a51d61c3-ce60-478d-98d5-21b8b99271ae
          readOnly: true
        messages:
          type: array
          items:
            title: Message
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              content:
                type: string
                example: 'Hi, I need to update my drivers licence.'
              createdAt:
                type: string
                format: date-time
                example: '2022-05-13T11:28:29.972Z'
                readOnly: true
            required:
              - id
              - content
              - createdAt
        createdAt:
          type: string
          format: date-time
          example: '2022-05-13T11:28:29.972Z'
          readOnly: true
      required:
        - id
        - createdAt
    Message:
      title: Message
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          example: 'Hi, I need to update my drivers licence.'
        createdAt:
          type: string
          format: date-time
          example: '2022-05-13T11:28:29.972Z'
          readOnly: true
      required:
        - id
        - content
        - createdAt
    Classification:
      title: Classification
      type: object
      properties:
        message:
          type: string
          example: Greetings from Estonia!
        classification:
          type: string
          example: NLib
      required:
        - message
        - classification
